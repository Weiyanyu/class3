<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.yeonon.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="top.yeonon.pojo.Comment" >
    <constructor >
      <idArg column="comment_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="notice_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_desc" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="insert_image" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, user_id, notice_id, comment_desc, create_time, update_time, insert_image
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.yeonon.pojo.Comment" >
    insert into comment (comment_id, user_id, notice_id, 
      comment_desc, create_time, update_time, 
      insert_image)
    values (#{commentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{noticeId,jdbcType=INTEGER}, 
      #{commentDesc,jdbcType=VARCHAR}, now(), now(),
      #{insertImage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.yeonon.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="noticeId != null" >
        notice_id,
      </if>
      <if test="commentDesc != null" >
        comment_desc,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="insertImage != null" >
        insert_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="noticeId != null" >
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="commentDesc != null" >
        #{commentDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
      <if test="insertImage != null" >
        #{insertImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.yeonon.pojo.Comment" >
    update comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="noticeId != null" >
        notice_id = #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="commentDesc != null" >
        comment_desc = #{commentDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
      <if test="insertImage != null" >
        insert_image = #{insertImage,jdbcType=VARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.yeonon.pojo.Comment" >
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      notice_id = #{noticeId,jdbcType=INTEGER},
      comment_desc = #{commentDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now(),
      insert_image = #{insertImage,jdbcType=VARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>

  <select id="selectCommentsByNoticeId" resultMap="BaseResultMap" parameterType="int" >
    SELECT
    <include refid="Base_Column_List" />
    FROM comment
    WHERE notice_id = #{noticeId}
  </select>



  <select id="selectCommentsIdsByNoticeId" resultType="int" parameterType="int">
    SELECT
    comment_id
    FROM comment
    WHERE notice_id = #{noticeId}
  </select>

  <select id="selectCommentsByUserIdOrNoticeId" resultMap="BaseResultMap" parameterType="int" >
    SELECT
    <include refid="Base_Column_List" />
    FROM comment
    WHERE 1=1
    <if test="userId != null">
      AND user_id = #{userId}
    </if>
    <if test="noticeId != null" >
      AND notice_id = #{noticeId}
    </if>
  </select>

  <select id="selectCommentsByUserIdAndDesc" parameterType="map" resultMap="BaseResultMap" >
    SELECT
    <include refid="Base_Column_List" />
    FROM comment
    WHERE user_id = #{userId}
    <if test="commentDesc != null">
      AND comment_desc LIKE CONCAT("%",#{commentDesc},"%")
    </if>

  </select>



</mapper>